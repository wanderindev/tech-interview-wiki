INITIAL_ARTICLES = [
    # Programming Languages - Python
    {
        "title": "Understanding Python's Global Interpreter Lock (GIL)",
        "taxonomy": "Programming Languages",
        "category": "Python",
        "level": "advanced",
        "tags": ["python", "concurrency", "gil", "performance", "threading"],
    },
    {
        "title": "Python Memory Management: How Objects Are Allocated",
        "taxonomy": "Programming Languages",
        "category": "Python",
        "level": "advanced",
        "tags": ["python", "memory-management", "garbage-collection", "performance"],
    },
    {
        "title": "Python Decorators: From Basic to Advanced",
        "taxonomy": "Programming Languages",
        "category": "Python",
        "level": "intermediate",
        "tags": ["python", "decorators", "metaprogramming", "functions"],
    },
    {
        "title": "List Comprehensions vs Generator Expressions",
        "taxonomy": "Programming Languages",
        "category": "Python",
        "level": "basic",
        "tags": ["python", "lists", "generators", "performance", "syntax"],
    },
    # Programming Languages - JavaScript
    {
        "title": "Event Loop and Asynchronous Programming in JS",
        "taxonomy": "Programming Languages",
        "category": "JavaScript",
        "level": "advanced",
        "tags": [
            "javascript",
            "event-loop",
            "asynchronous",
            "callbacks",
            "promises",
            "async-await",
        ],
    },
    {
        "title": "Closures and Scope in JavaScript",
        "taxonomy": "Programming Languages",
        "category": "JavaScript",
        "level": "intermediate",
        "tags": ["javascript", "closures", "scope", "functions"],
    },
    {
        "title": "Understanding Promises and Async/Await",
        "taxonomy": "Programming Languages",
        "category": "JavaScript",
        "level": "intermediate",
        "tags": ["javascript", "promises", "async-await", "asynchronous"],
    },
    {
        "title": "ES6+ Features Every Developer Should Know",
        "taxonomy": "Programming Languages",
        "category": "JavaScript",
        "level": "basic",
        "tags": [
            "javascript",
            "es6",
            "syntax",
            "features",
            "arrow-functions",
            "let-const",
            "modules",
        ],
    },
    # Programming Languages - SQL
    {
        "title": "Advanced SQL Query Optimization Techniques",
        "taxonomy": "Programming Languages",
        "category": "SQL",
        "level": "advanced",
        "tags": [
            "sql",
            "query-optimization",
            "performance",
            "indexing",
            "execution-plans",
        ],
    },
    {
        "title": "Understanding Database Indexes and Performance",
        "taxonomy": "Programming Languages",
        "category": "SQL",
        "level": "intermediate",
        "tags": ["sql", "indexes", "performance", "database", "optimization"],
    },
    {
        "title": "Common Table Expressions (CTEs) and Window Functions",
        "taxonomy": "Programming Languages",
        "category": "SQL",
        "level": "intermediate",
        "tags": ["sql", "cte", "window-functions", "advanced-queries"],
    },
    {
        "title": "Essential SQL Joins and Subqueries",
        "taxonomy": "Programming Languages",
        "category": "SQL",
        "level": "basic",
        "tags": ["sql", "joins", "subqueries", "database", "querying"],
    },
    # Web Development - HTML/CSS
    {
        "title": "Modern CSS Layout with Flexbox and Grid",
        "taxonomy": "Web Development",
        "category": "HTML/CSS",
        "level": "intermediate",
        "tags": ["css", "layout", "flexbox", "grid", "responsive-design"],
    },
    {
        "title": "CSS Architecture and BEM Methodology",
        "taxonomy": "Web Development",
        "category": "HTML/CSS",
        "level": "advanced",
        "tags": ["css", "architecture", "bem", "methodologies", "scalability"],
    },
    {
        "title": "Responsive Design Best Practices",
        "taxonomy": "Web Development",
        "category": "HTML/CSS",
        "level": "basic",
        "tags": ["responsive-design", "css", "media-queries", "mobile-first"],
    },
    # Web Development - React
    {
        "title": "React Component Lifecycle and Hooks Deep Dive",
        "taxonomy": "Web Development",
        "category": "React",
        "level": "advanced",
        "tags": [
            "react",
            "component-lifecycle",
            "hooks",
            "useeffect",
            "advanced-concepts",
        ],
    },
    {
        "title": "State Management Patterns in React",
        "taxonomy": "Web Development",
        "category": "React",
        "level": "intermediate",
        "tags": ["react", "state-management", "redux", "context-api", "patterns"],
    },
    {
        "title": "Building Custom React Hooks",
        "taxonomy": "Web Development",
        "category": "React",
        "level": "intermediate",
        "tags": ["react", "hooks", "custom-hooks", "reusability"],
    },
    # Web Development - Flask
    {
        "title": "Flask Application Factory Pattern",
        "taxonomy": "Web Development",
        "category": "Flask",
        "level": "advanced",
        "tags": ["flask", "application-factory", "design-patterns", "python"],
    },
    {
        "title": "Flask Extension Development",
        "taxonomy": "Web Development",
        "category": "Flask",
        "level": "advanced",
        "tags": ["flask", "extensions", "plugin-development", "python"],
    },
    {
        "title": "RESTful API Design with Flask",
        "taxonomy": "Web Development",
        "category": "Flask",
        "level": "intermediate",
        "tags": ["flask", "restful-api", "web-services", "python"],
    },
    # Computer Science Fundamentals - Data Structures
    {
        "title": "Implementing a Red-Black Tree",
        "taxonomy": "Computer Science Fundamentals",
        "category": "Data Structures",
        "level": "advanced",
        "tags": [
            "data-structures",
            "red-black-tree",
            "trees",
            "algorithms",
            "balancing",
        ],
    },
    {
        "title": "Hash Tables: Implementation and Collision Resolution",
        "taxonomy": "Computer Science Fundamentals",
        "category": "Data Structures",
        "level": "intermediate",
        "tags": ["data-structures", "hash-tables", "collision-resolution", "hashing"],
    },
    {
        "title": "Understanding Tree Traversal Algorithms",
        "taxonomy": "Computer Science Fundamentals",
        "category": "Data Structures",
        "level": "basic",
        "tags": ["data-structures", "trees", "traversal", "algorithms"],
    },
    # Computer Science Fundamentals - Algorithms
    {
        "title": "Dynamic Programming: Patterns and Problems",
        "taxonomy": "Computer Science Fundamentals",
        "category": "Algorithms",
        "level": "advanced",
        "tags": ["algorithms", "dynamic-programming", "optimization", "problems"],
    },
    {
        "title": "Graph Algorithms: DFS, BFS, and Their Applications",
        "taxonomy": "Computer Science Fundamentals",
        "category": "Algorithms",
        "level": "intermediate",
        "tags": ["algorithms", "graphs", "dfs", "bfs", "traversal"],
    },
    {
        "title": "Binary Search and Its Variations",
        "taxonomy": "Computer Science Fundamentals",
        "category": "Algorithms",
        "level": "basic",
        "tags": ["algorithms", "binary-search", "searching"],
    },
    # Computer Science Fundamentals - System Design
    {
        "title": "Designing a Distributed Cache System",
        "taxonomy": "Computer Science Fundamentals",
        "category": "System Design",
        "level": "advanced",
        "tags": ["system-design", "distributed-systems", "caching", "scalability"],
    },
    {
        "title": "Microservices Communication Patterns",
        "taxonomy": "Computer Science Fundamentals",
        "category": "System Design",
        "level": "intermediate",
        "tags": ["system-design", "microservices", "communication", "patterns"],
    },
    {
        "title": "API Design Best Practices",
        "taxonomy": "Computer Science Fundamentals",
        "category": "System Design",
        "level": "basic",
        "tags": ["system-design", "apis", "best-practices", "rest"],
    },
    # DevOps & Tools - Docker
    {
        "title": "Multi-Stage Docker Builds for Production",
        "taxonomy": "DevOps & Tools",
        "category": "Docker",
        "level": "advanced",
        "tags": ["docker", "multi-stage-builds", "production", "containers"],
    },
    {
        "title": "Docker Networking and Security",
        "taxonomy": "DevOps & Tools",
        "category": "Docker",
        "level": "intermediate",
        "tags": ["docker", "networking", "security", "containers"],
    },
    {
        "title": "Docker Compose for Development",
        "taxonomy": "DevOps & Tools",
        "category": "Docker",
        "level": "basic",
        "tags": ["docker", "docker-compose", "development", "containers"],
    },
    # DevOps & Tools - Git
    {
        "title": "Git Rebase Strategies and When to Use Them",
        "taxonomy": "DevOps & Tools",
        "category": "Git",
        "level": "advanced",
        "tags": ["git", "rebase", "version-control", "workflows"],
    },
    {
        "title": "Managing Feature Branches and Pull Requests",
        "taxonomy": "DevOps & Tools",
        "category": "Git",
        "level": "intermediate",
        "tags": ["git", "branches", "pull-requests", "workflows"],
    },
    {
        "title": "Essential Git Commands and Workflows",
        "taxonomy": "DevOps & Tools",
        "category": "Git",
        "level": "basic",
        "tags": ["git", "commands", "workflows", "version-control"],
    },
    # DevOps & Tools - Linux
    {
        "title": "Shell Scripting for Automation",
        "taxonomy": "DevOps & Tools",
        "category": "Linux",
        "level": "advanced",
        "tags": ["linux", "shell-scripting", "automation", "bash"],
    },
    {
        "title": "Linux Process Management and Signals",
        "taxonomy": "DevOps & Tools",
        "category": "Linux",
        "level": "intermediate",
        "tags": ["linux", "process-management", "signals", "processes"],
    },
    {
        "title": "Essential Linux Commands for Developers",
        "taxonomy": "DevOps & Tools",
        "category": "Linux",
        "level": "basic",
        "tags": ["linux", "commands", "basics", "terminal"],
    },
    # Cloud & Infrastructure - AWS
    {
        "title": "AWS Lambda and Serverless Architecture",
        "taxonomy": "Cloud & Infrastructure",
        "category": "AWS",
        "level": "advanced",
        "tags": ["aws", "lambda", "serverless", "cloud"],
    },
    {
        "title": "ECS vs EKS: Container Orchestration on AWS",
        "taxonomy": "Cloud & Infrastructure",
        "category": "AWS",
        "level": "advanced",
        "tags": ["aws", "ecs", "eks", "containers", "orchestration"],
    },
    {
        "title": "S3 and CloudFront for Static Web Hosting",
        "taxonomy": "Cloud & Infrastructure",
        "category": "AWS",
        "level": "basic",
        "tags": ["aws", "s3", "cloudfront", "static-web-hosting", "cdn"],
    },
    # Additional articles to append to INITIAL_ARTICLES:
    # Programming Languages - Go
    {
        "title": "Goroutines and Channels: Concurrency in Go",
        "taxonomy": "Programming Languages",
        "category": "Go",
        "level": "advanced",
        "tags": ["go", "concurrency", "goroutines", "channels", "parallelism"],
    },
    {
        "title": "Error Handling Patterns in Go",
        "taxonomy": "Programming Languages",
        "category": "Go",
        "level": "intermediate",
        "tags": ["go", "error-handling", "patterns", "best-practices"],
    },
    # Programming Languages - TypeScript
    {
        "title": "Advanced TypeScript Generic Patterns",
        "taxonomy": "Programming Languages",
        "category": "TypeScript",
        "level": "advanced",
        "tags": ["typescript", "generics", "type-system", "patterns"],
    },
    {
        "title": "TypeScript Type Guards and Narrowing",
        "taxonomy": "Programming Languages",
        "category": "TypeScript",
        "level": "intermediate",
        "tags": ["typescript", "type-guards", "type-narrowing", "type-safety"],
    },
    # Databases - NoSQL
    {
        "title": "MongoDB Aggregation Pipeline Deep Dive",
        "taxonomy": "Databases",
        "category": "NoSQL",
        "level": "advanced",
        "tags": ["mongodb", "aggregation", "pipeline", "queries"],
    },
    {
        "title": "Cassandra Data Modeling Best Practices",
        "taxonomy": "Databases",
        "category": "NoSQL",
        "level": "advanced",
        "tags": ["cassandra", "data-modeling", "distributed-databases", "nosql"],
    },
    {
        "title": "Redis Caching Strategies and Patterns",
        "taxonomy": "Databases",
        "category": "NoSQL",
        "level": "intermediate",
        "tags": ["redis", "caching", "patterns", "performance"],
    },
    # Web Development - Angular
    {
        "title": "Angular Change Detection Strategies",
        "taxonomy": "Web Development",
        "category": "Angular",
        "level": "advanced",
        "tags": ["angular", "change-detection", "performance", "optimization"],
    },
    {
        "title": "RxJS Operators in Angular Applications",
        "taxonomy": "Web Development",
        "category": "Angular",
        "level": "intermediate",
        "tags": ["angular", "rxjs", "observables", "reactive-programming"],
    },
    # Software Design - Patterns
    {
        "title": "Behavioral Design Patterns in Modern Software",
        "taxonomy": "Software Design",
        "category": "Design Patterns",
        "level": "advanced",
        "tags": ["design-patterns", "behavioral-patterns", "software-architecture"],
    },
    {
        "title": "SOLID Principles: Real-World Examples",
        "taxonomy": "Software Design",
        "category": "Design Patterns",
        "level": "intermediate",
        "tags": ["solid", "design-principles", "clean-code", "architecture"],
    },
    # Security
    {
        "title": "OAuth 2.0 and OpenID Connect Implementation",
        "taxonomy": "Security",
        "category": "Authentication",
        "level": "advanced",
        "tags": ["oauth", "openid-connect", "authentication", "security"],
    },
    {
        "title": "Web Security: XSS and CSRF Prevention",
        "taxonomy": "Security",
        "category": "Web Security",
        "level": "intermediate",
        "tags": ["security", "xss", "csrf", "web-security"],
    },
    # Testing
    {
        "title": "Test-Driven Development: A Practical Guide",
        "taxonomy": "Testing",
        "category": "Methodologies",
        "level": "intermediate",
        "tags": ["tdd", "testing", "unit-tests", "methodologies"],
    },
    {
        "title": "End-to-End Testing Best Practices",
        "taxonomy": "Testing",
        "category": "E2E Testing",
        "level": "intermediate",
        "tags": ["testing", "e2e", "automation", "cypress", "selenium"],
    },
]
